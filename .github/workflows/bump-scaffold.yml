name: Bump scaffold

# To run this workflow:
#
# - Creates an environment named "admin"
# - Adds a secret named GH_TOKEN with the following permissions to this repository:
#   - contents: write
#   - pull-requests: write
#   - workflows: write

on:
  workflow_call:
    inputs:
      package-name:
        description: Name of the package
        required: true
        type: string
      use-react:
        default: true
        description: Use React
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  bump-scaffold:
    environment:
      name: admin
      url: ${{ steps.summary.outputs.url }}
    name: Bump scaffold
    runs-on: ubuntu-latest

    steps:
      - name: Validate environment
        run: |
          if [ -z "${{ secrets.GH_TOKEN }}" ]
          then
            exit 1
          fi

      - name: Check out current
        uses: actions/checkout@v3
        with:
          path: ./current
          token: ${{ secrets.GH_TOKEN }}

      - name: Check out template
        uses: actions/checkout@v3
        with:
          path: ./template
          repository: compulim/workflows

      - id: create-branch
        name: Create branch
        run: |
          BRANCH_NAME=bot/bump-scaffold/${{ github.run_number }}

          cd ./current/
          git checkout -b $BRANCH_NAME
          echo branch-name=$BRANCH_NAME >> $GITHUB_OUTPUT

      - name: Update directory name
        run: |
          cd ./template/scaffold/copy/packages/
          mv \$package-name ${{ inputs.package-name }}

          cd ../../merge/packages
          mv \$package-name ${{ inputs.package-name }}

      - name: Update content
        run: |
          cd ./template/scaffold/

          for i in $(find -type f)
          do
            echo --- $i

            sed -- 's/$package-name/${{ inputs.package-name }}/g' $i | tee /tmp/output.tmp
            mv /tmp/output.tmp $i

            sed -- 's/$use-react/${{ inputs.use-react }}/g' $i | tee /tmp/output.tmp
            mv /tmp/output.tmp $i

            echo
          done

      - name: Copy scaffold
        run: rsync --recursive --verbose ./template/scaffold/copy/ ./current/

      - name: Merge JSON
        run: |
          shopt -s globstar

          cd ./template/scaffold/merge/

          for i in $(find **/*.json -type f)
          do
            echo --- $i

            cat ../../../current/$i | jq --argfile merge $i '. + $merge' | tee /tmp/temp.json
            mv /tmp/temp.json ../../../current/$i

            echo
          done

      - name: Remove React in Babel config
        if: '!inputs.use-react'
        run: |
          cd ./template/scaffold/copy/packages/${{ inputs.package-name }}/

          # Remove @babel/preset-react from babel.config.json/presets

          for i in $(ls -1 babel.*.json)
          do
            echo --- $i

            cat $i | jq -r '. | (.presets | map(select(. != "@babel/preset-react")))' | tee /tmp/output.tmp
            mv /tmp/output.tmp $i

            echo
          done

      - name: Update configuration files
        run: |
          cd ./current/

          npm clean-install
          npm run postscaffold

      - id: get-changes
        name: Get changes
        run: |
          cd ./current/

          git status
          git ls-files --deleted --exclude-from=./.gitignore --modified --others

          if [[ $(git ls-files --deleted --exclude-from=./.gitignore --modified --others | wc -l) -gt 0 ]]
          then
            echo has-changes=true >> $GITHUB_OUTPUT
          fi

      - id: commit-and-push
        if: ${{ steps.get-changes.outputs.has-changes == 'true' }}
        name: Commit and push
        run: |
          cd ./current

          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "@${{ github.actor }}"

          git add .
          git commit -a -m "Bump scaffold"
          git push -u origin ${{ steps.create-branch.outputs.branch-name }}

          URL=${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.create-branch.outputs.branch-name }}?expand=1
          echo url=$URL >> $GITHUB_OUTPUT

          echo Branch created at [\`${{ steps.create-branch.outputs.branch-name }}\`]\($URL\). >> $GITHUB_STEP_SUMMARY

      - env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        id: create-pull-request
        if: ${{ steps.get-changes.outputs.has-changes == 'true' }}
        name: Create pull request
        run: |
          cd ./current

          URL=$(gh pr create --fill --repo ${{ github.repository }} || true) >> $GITHUB_OUTPUT

          if [[ ! -z "$URL" ]]
          then
            echo url=$URL >> $GITHUB_OUTPUT
            echo Pull request created at $URL. >> $GITHUB_STEP_SUMMARY
          fi

      - id: summary
        if: ${{ steps.get-changes.outputs.has-changes == 'true' }}
        name: Summary
        run: echo url=${{ steps.create-pull-request.outputs.url || steps.commit-and-push.outputs.url }} >> $GITHUB_OUTPUT
